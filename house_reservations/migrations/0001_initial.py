# Generated by Django 5.0.3 on 2024-03-16 23:25

import django.contrib.postgres.constraints
import django.contrib.postgres.fields.ranges
import django.db.models.deletion
import house_reservations.services.sql_functions
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        ('houses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HouseReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_datetime', models.DateTimeField(verbose_name='Дата и время заезда')),
                ('check_out_datetime', models.DateTimeField(verbose_name='Дата и время выезда')),
                ('total_persons_amount', models.IntegerField(verbose_name='Количество человек для проживания в домике')),
                ('preferred_contact', models.CharField(max_length=255, verbose_name='Предпочтительный способ связи')),
                ('comment', models.CharField(max_length=511, verbose_name='Комментарий')),
                ('cancelled', models.BooleanField(default=False, verbose_name='Отменено?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания бронирования')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения бронирования')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='clients.client', verbose_name='Клиент')),
                ('house', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservations', to='houses.house', verbose_name='Домик')),
            ],
            options={
                'verbose_name': 'Бронь домика',
                'verbose_name_plural': 'Брони домиков',
            },
        ),
        migrations.AddConstraint(
            model_name='housereservation',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(condition=models.Q(('cancelled', False), ('house', None), _connector='OR'), expressions=[(house_reservations.services.sql_functions.TsTzRange('check_in_datetime', 'check_out_datetime', django.contrib.postgres.fields.ranges.RangeBoundary()), '&&'), ('house', '=')], name='exclude_reservations_overlapping'),
        ),
    ]
